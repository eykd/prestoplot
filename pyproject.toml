[project]
name = "prestoplot"
description = "Generative grammars for idea generation."
readme = "README.rst"
authors = [
    { name = "David Eyk", email = "david@eykd.net" }
]

license = "MIT"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
]

dynamic = ["version"]

requires-python = ">=3.11"
dependencies = [
    "msgpack",
    "pyyaml",
    "jinja2",
    "funcy",
    "click",
    "Markdown",
]

[project.scripts]
presto = "prestoplot.cli:main"

[project.urls]
Homepage = "https://github.com/eykd/prestoplot"
Issues = "https://github.com/eykd/prestoplot/issues"
Repository = "https://github.com/eykd/prestoplot"


[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.hatch.build.hooks.version]
path = "src/prestoplot/_version.py"
template = """
version = '{version}'
"""


[tool]
[tool.uv-dynamic-versioning]
vcs = "git"
style = "pep440"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88

[tool.pytest.ini_options]
addopts = []

[tool.coverage.run]
source = ["src/"]
omit = ["setup.py", "versioneer.py", "src/prestoplot/_version.py"]
patch = ["subprocess"]

[tool.versioneer]
VCS = "git"
style = "pep440"
versionfile_source = "src/prestoplot/_version.py"
versionfile_build = "prestoplot/_version.py"
tag_prefix = ""

[tool.ruff]
src = ["src", "tests"]
target-version = "py313"

line-length = 88

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules/
select = [
    "A",      # https://docs.astral.sh/ruff/rules/#flake8-builtins-a
    "ANN",    # https://docs.astral.sh/ruff/rules/#flake8-annotations-ann
    "ARG",    # https://docs.astral.sh/ruff/rules/#flake8-unused-arguments-arg
    "ASYNC",  # https://docs.astral.sh/ruff/rules/#flake8-async-async
    "B",      # https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    "BLE",    # https://docs.astral.sh/ruff/rules/#flake8-blind-except-ble
    "C4",     # https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
    "C90",    # https://docs.astral.sh/ruff/rules/#mccabe-c90
    "COM",    # https://docs.astral.sh/ruff/rules/#flake8-commas-com
    "D",      # https://docs.astral.sh/ruff/rules/#pydocstyle-d
    "DJ",     # https://docs.astral.sh/ruff/rules/#flake8-django-dj
    "DTZ",    # https://docs.astral.sh/ruff/rules/#flake8-datetimez-dtz
    "E",      # https://docs.astral.sh/ruff/rules/#error-e
    "EM",     # https://docs.astral.sh/ruff/rules/#flake8-errmsg-em
    "ERA",    # https://docs.astral.sh/ruff/rules/#eradicate-era
    "EXE",    # https://docs.astral.sh/ruff/rules/#flake8-executable-exe
    "F",      # https://docs.astral.sh/ruff/rules/#pyflakes-f
    "FA",     # https://docs.astral.sh/ruff/rules/#flake8-future-annotations-fa
    "FBT",    # https://docs.astral.sh/ruff/rules/#flake8-boolean-trap-fbt
    "FLY",    # https://docs.astral.sh/ruff/rules/#flynt-fly
    "FURB",   # https://docs.astral.sh/ruff/rules/#refurb-furb
    "G",      # https://docs.astral.sh/ruff/rules/#flake8-logging-format-g
    "I",      # https://docs.astral.sh/ruff/rules/#isort-i
    "ICN",    # https://docs.astral.sh/ruff/rules/#flake8-import-conventions-icn
    "INP",    # https://docs.astral.sh/ruff/rules/#flake8-no-pep420-inp
    "INT",    # https://docs.astral.sh/ruff/rules/#flake8-gettext-int
    "ISC",    # https://docs.astral.sh/ruff/rules/#flake8-implicit-str-concat-isc
    "LOG",    # https://docs.astral.sh/ruff/rules/#flake8-logging-log
    "N",      # https://docs.astral.sh/ruff/rules/#pep8-naming-n
    "PERF",   # https://docs.astral.sh/ruff/rules/#perflint-perf
    "PGH",    # https://docs.astral.sh/ruff/rules/#pygrep-hooks-pgh
    "PIE",    # https://docs.astral.sh/ruff/rules/#flake8-pie-pie
    # "PL",   # https://docs.astral.sh/ruff/rules/#pylint-pl
    "PT",     # https://docs.astral.sh/ruff/rules/#flake8-pytest-style-pt
    "PTH",    # https://docs.astral.sh/ruff/rules/#flake8-use-pathlib-pth
    "PYI",    # https://docs.astral.sh/ruff/rules/#flake8-pyi-pyi
    "Q",      # https://docs.astral.sh/ruff/rules/#flake8-quotes-q
    "RET",    # https://docs.astral.sh/ruff/rules/#flake8-return-ret
    "RSE",    # https://docs.astral.sh/ruff/rules/#flake8-raise-rse
    "RUF",    # https://docs.astral.sh/ruff/rules/#ruff-specific-rules-ruf
    "S",      # https://docs.astral.sh/ruff/rules/#flake8-bandit-s
    "SIM",    # https://docs.astral.sh/ruff/rules/#flake8-simplify-sim
    "SLF",    # https://docs.astral.sh/ruff/rules/#flake8-self-slf
    "SLOT",   # https://docs.astral.sh/ruff/rules/#flake8-slots-slot
    "T10",    # https://docs.astral.sh/ruff/rules/#flake8-debugger-t10
    "T20",    # https://docs.astral.sh/ruff/rules/#flake8-print-t20
    "TCH",    # https://docs.astral.sh/ruff/rules/#flake8-type-checking-tch
    "TD",     # https://docs.astral.sh/ruff/rules/#flake8-todos-td
    "TID",    # https://docs.astral.sh/ruff/rules/#flake8-tidy-imports-tid
    "TRY",    # https://docs.astral.sh/ruff/rules/#tryceratops-try
    "UP",     # https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "W",      # https://docs.astral.sh/ruff/rules/#warning-w
    "YTT",    # https://docs.astral.sh/ruff/rules/#flake8-2020-ytt
]


ignore = [
    "COM812", # https://docs.astral.sh/ruff/rules/missing-trailing-comma/
    "D105",   # https://docs.astral.sh/ruff/rules/undocumented-magic-method/
    "D106",   # https://docs.astral.sh/ruff/rules/undocumented-public-nested-class/
    "D107",   # https://docs.astral.sh/ruff/rules/undocumented-public-init/
    "D203",   # https://docs.astral.sh/ruff/rules/one-blank-line-before-class/
    "D213",   # https://docs.astral.sh/ruff/rules/multi-line-summary-second-line/
    "D400",   # https://docs.astral.sh/ruff/rules/ends-in-period/
    "D401",   # https://docs.astral.sh/ruff/rules/non-imperative-mood/
    "D404",   # https://docs.astral.sh/ruff/rules/docstring-starts-with-this/
    "D415",   # https://docs.astral.sh/ruff/rules/ends-in-punctuation/
    "E501",   # https://docs.astral.sh/ruff/rules/line-too-long/
    "EM101",  # https://docs.astral.sh/ruff/rules/raw-string-in-exception/
    "FURB189", # https://docs.astral.sh/ruff/rules/subclass-builtin/
    "ISC001", # https://docs.astral.sh/ruff/rules/single-line-implicit-string-concatenation/
    "TD002",  # https://docs.astral.sh/ruff/rules/missing-todo-author/
    "TD003",  # https://docs.astral.sh/ruff/rules/missing-todo-link/
    "TRY003", # https://docs.astral.sh/ruff/rules/raise-vanilla-args/
]


# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"tests/**/test*.py" = [
    "S101",
    "D1",
    "INP001",
    "ARG001",
    "ARG002",
]


"tests/**/conftest.py" = [
    "S101",
    "D1",
    "INP001",
    "ARG001",
]


[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"

[tool.ruff.format]
preview = true

quote-style = "single"
docstring-code-format = true

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[dependency-groups]
dev = [
    "ipython>=8.18.1",
    "pdbpp>=0.11.7",
    "pre-commit>=4.3.0",
    "ruff>=0.12.8",
    "twine>=6.1.0",
]
test = [
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pytest-profiling>=1.8.1",
    "pytest-random-order>=1.2.0",
    "pytest-xdist>=3.8.0",
    "ruff>=0.12.8",
]
